{"version":3,"sources":["components/DetailCard.module.css","components/UI/Dropdown.module.css","components/ListCard.module.css","pages/ListCountries.module.css","components/UI/Navbar.module.css","components/Input.module.css","pages/CardDetails.module.css","components/UI/LoadingSpinner.module.css","components/UI/Button.module.css","components/SelectRegion.module.css","context/theme-context.js","components/UI/Navbar.js","components/lib/api.js","components/UI/Dropdown.js","components/SelectRegion.js","components/Input.js","components/ListCard.js","components/UI/LoadingSpinner.js","components/UI/NotFound.js","components/hooks/use-http.js","pages/ListCountries.js","components/UI/Button.js","components/DetailCard.js","pages/CardDetails.js","App.js","index.js"],"names":["module","exports","ThemeContext","React","createContext","currentTheme","setTheme","ThemeProvider","props","useState","setCurrentTheme","Provider","value","children","Navbar","body","document","themeCtx","useContext","console","log","navElementClass","classes","navbar","className","darkTheme","onClick","classList","toggle","fetchAllCountriesHandler","a","fetch","response","ok","Error","json","data","map","country","id","alpha3Code","name","region","pop","population","img","flag","captial","capital","newData","fetchOneCountryHandler","alpha","Dropdown","selectMenuRef","useRef","useRouteMatch","selectIsShown","setSelectIsShown","darkThemeClass","style","toggleSelectMenuHandler","addEventListener","event","current","contains","target","selectContainer","ref","currentOption","tagName","onSelectRegion","textContent","item","SelectRegion","selectedRegion","setSelectedRegion","useEffect","filteredByRegion","newCountryList","countryData","filter","onSearch","Input","currentInput","setCurrentInput","countryList","inputClass","inputContainer","inputForm","onSubmit","preventDefault","trim","length","input","query","stringArray","split","charAt","toUpperCase","slice","word","join","nameToUppercase","listFilter","type","onChange","placeholder","ListCard","listCardClass","listCard","routeLink","to","image","src","description","toLocaleString","LoadingSpinner","spinner","NotFound","httpReducer","state","action","error","status","responseData","errorMessage","filteredData","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","updateData","ListCountries","filteredContent","setFilteredContent","isFiltered","setIsFiltered","isFilteredRegion","setIsFilteredRegion","content","filterCountryHandler","countries","countryMenu","Button","buttonClass","button","DetailCard","cardContainer","detailCard","alt","header","column","nativeName","subregion","topLevelDomain","currencies","languages","border","borders","CardDetails","params","useParams","countryID","detailsContainer","detailsButton","App","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ca575f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"DetailCard_cardContainer__20YCC\",\"detailCard\":\"DetailCard_detailCard__EqRBX\",\"image\":\"DetailCard_image__3VRS4\",\"description\":\"DetailCard_description__16xE3\",\"header\":\"DetailCard_header__WPT8T\",\"column\":\"DetailCard_column__3_I-V\",\"border\":\"DetailCard_border__2_1IS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"Dropdown_selectContainer__1wNES\",\"selectButton\":\"Dropdown_selectButton__hap57\",\"selectOptions\":\"Dropdown_selectOptions__2iggu\",\"item\":\"Dropdown_item__rZmTP\",\"toggleOpen\":\"Dropdown_toggleOpen__2P63r\",\"iconOpen\":\"Dropdown_iconOpen__2p2Qp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listCard\":\"ListCard_listCard__1sYQg\",\"image\":\"ListCard_image__39Iq8\",\"description\":\"ListCard_description__2OSPI\",\"routeLink\":\"ListCard_routeLink__1sjTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countries\":\"ListCountries_countries__3plb_\",\"countryList\":\"ListCountries_countryList__1mi3s\",\"countryMenu\":\"ListCountries_countryMenu__2B1Ee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1u128\",\"darkTheme\":\"Navbar_darkTheme__1lDmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"Input_inputForm__20OxX\",\"inputContainer\":\"Input_inputContainer__3SJ25\",\"inputIcon\":\"Input_inputIcon__2fRFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"CardDetails_detailsContainer__10pFj\",\"detailsButton\":\"CardDetails_detailsButton__2O_Za\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__25oxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1oVoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-container\":\"SelectRegion_select-container__mGIFZ\",\"item\":\"SelectRegion_item__2nWEa\",\"select-options\":\"SelectRegion_select-options__2Rx3Y\",\"select-button\":\"SelectRegion_select-button__1dCI6\",\"toggleOpen\":\"SelectRegion_toggleOpen__2sSjM\",\"iconOpen\":\"SelectRegion_iconOpen__2EI6c\"};","import React, { useState } from \"react\";\r\n\r\nconst ThemeContext = React.createContext({\r\n  currentTheme: 'light',\r\n  setTheme: () => {},\r\n});\r\n\r\nexport const ThemeProvider = (props) => {\r\n  const [currentTheme, setCurrentTheme] = useState('light');\r\n\r\n  const toggleTheme = () =>\r\n    currentTheme === \"light\"\r\n      ? setCurrentTheme(\"dark\")\r\n      : setCurrentTheme(\"light\");\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ currentTheme, setTheme: toggleTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext;\r\n","import { useContext } from \"react\";\r\n\r\nimport classes from \"./Navbar.module.css\";\r\nimport ThemeContext from \"../../context/theme-context\";\r\n\r\nconst Navbar = () => {\r\n  const body = document.body;\r\n  const themeCtx = useContext(ThemeContext);\r\n\r\n  const toggleThemeHandler = () => {\r\n    themeCtx.setTheme();\r\n    body.classList.toggle(\"darkBackground\");\r\n  };\r\n  console.log(themeCtx.currentTheme);\r\n\r\n  const navElementClass = `${classes.navbar} ${\r\n    themeCtx.currentTheme === \"dark\"\r\n      ? \" darkElement darkBoxShadow\"\r\n      : \" lightElement lightBoxShadow\"\r\n  }`;\r\n\r\n  return (\r\n    <div className={navElementClass}>\r\n      <div>\r\n        <h2>Where in the world?</h2>\r\n      </div>\r\n      <div className={classes.darkTheme} onClick={toggleThemeHandler}>\r\n        {themeCtx.currentTheme === \"light\" ? (\r\n          <i className=\"far fa-moon\"></i>\r\n        ) : (\r\n          <i className=\"fas fa-moon\"></i>\r\n        )}{\" \"}\r\n        Dark Mode\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const fetchAllCountriesHandler = async () => {\r\n  const response = await fetch(\"https://restcountries.com/v2/all\");\r\n\r\n  if (!response.ok) throw new Error(\"Something went wrong!\");\r\n\r\n  const data = await response.json();\r\n  const newData = await data.map((country) => {\r\n    return {\r\n      id: country.alpha3Code,\r\n      name: country.name,\r\n      region: country.region,\r\n      pop: country.population,\r\n      img: country.flag,\r\n      captial: country.capital,\r\n    };\r\n  });\r\n  // console.log(newData)\r\n  return newData;\r\n};\r\n\r\nexport const fetchOneCountryHandler = async (alpha) => {\r\n  const response = await fetch(\r\n    `https://restcountries.com/v2/alpha/${alpha}`\r\n  );\r\n  if (!response.ok) throw new Error(\"Something went wrong!\");\r\n  const data = await response.json();\r\n  // console.log(data)\r\n  return data; \r\n};\r\n","import { useContext, useState, useRef } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport classes from \"./Dropdown.module.css\";\r\nimport ThemeContext from \"../../context/theme-context\";\r\n\r\nconst Dropdown = (props) => {\r\n  const themeCtx = useContext(ThemeContext);\r\n  const selectMenuRef = useRef();\r\n  const match = useRouteMatch();\r\n\r\n  const [selectIsShown, setSelectIsShown] = useState(false);\r\n\r\n  // const customSelect = `${classes.customSelect} ${\r\n  //   themeCtx.currentTheme === \"dark\"\r\n  //     ? \" darkElement darkBoxShadow\"\r\n  //     : \" lightElement lightBoxShadow\"\r\n  // }`;\r\n\r\n  const darkThemeClass = (style) => {\r\n    return `${classes[style]} ${\r\n      themeCtx.currentTheme === \"dark\"\r\n        ? \" darkElement darkBoxShadow\"\r\n        : \" lightElement lightBoxShadow\"\r\n    }`;\r\n  };\r\n\r\n  const toggleSelectMenuHandler = () => {\r\n    !selectIsShown ? setSelectIsShown(true) : setSelectIsShown(false);\r\n  };\r\n\r\n  const selectOptionHandler = (event) => {\r\n    if (event.target.tagName === \"LI\") {\r\n      props.onSelectRegion(event.target.textContent)\r\n    }\r\n    toggleSelectMenuHandler();\r\n  };\r\n\r\n  // console.log(match.path);\r\n\r\n  // Event handler attached to document so that user can click outside of menu to close it.\r\n  document.addEventListener(\"click\", function (event) {\r\n    if (selectMenuRef.current === null) return;\r\n\r\n    if (!selectMenuRef.current.contains(event.target)) {\r\n      selectIsShown && setSelectIsShown(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className={classes.selectContainer} ref={selectMenuRef}>\r\n      <div\r\n        className={darkThemeClass(\"selectButton\")}\r\n        onClick={toggleSelectMenuHandler}\r\n      >\r\n        <p>{props.currentOption}</p>\r\n        <i className=\"fas fa-sort-down\"></i>\r\n      </div>\r\n      {selectIsShown && (\r\n        <ul\r\n          className={darkThemeClass(\"selectOptions\")}\r\n          onClick={selectOptionHandler}\r\n        >\r\n          <li className={classes.item}>Africa</li>\r\n          <li className={classes.item}>Americas</li>\r\n          <li className={classes.item}>Asia</li>\r\n          <li className={classes.item}>Europe</li>\r\n          <li className={classes.item}>Oceana</li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import { useContext, useState, useEffect } from \"react\";\r\n\r\nimport classes from \"./SelectRegion.module.css\";\r\nimport ThemeContext from \"../context/theme-context\";\r\nimport Dropdown from \"./UI/Dropdown\";\r\n\r\nconst SelectRegion = (props) => {\r\n  const themeCtx = useContext(ThemeContext);\r\n  const [selectedRegion, setSelectedRegion] = useState(\"Filter by region\");\r\n  \r\n\r\n  // const customSelect = `${classes.customSelect} ${\r\n  //   themeCtx.currentTheme === \"dark\"\r\n  //     ? \" darkElement darkBoxShadow\"\r\n  //     : \" lightElement lightBoxShadow\"\r\n  // }`;\r\n\r\n  useEffect(() => {\r\n    if (props.filteredByRegion === false) {\r\n      setSelectedRegion(\"Filter by region\")\r\n    }\r\n    console.log('thisis running!')\r\n  }, [props.filteredByRegion])\r\n\r\n\r\n  const selectRegionHandler = (data) => {\r\n    console.log(data)\r\n    const newCountryList = props.countryData.filter(country => {\r\n      return country.region === data\r\n    })\r\n    setSelectedRegion(data);\r\n\r\n    props.onSearch(newCountryList, true)\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Dropdown onSelectRegion={selectRegionHandler} currentOption={selectedRegion}/>\r\n  );\r\n};\r\n\r\nexport default SelectRegion;\r\n","import { useEffect, useState, useContext } from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\nimport ThemeContext from \"../context/theme-context\";\r\n\r\nconst Input = (props) => {\r\n  const [currentInput, setCurrentInput] = useState(\"\");\r\n  const themeCtx = useContext(ThemeContext);\r\n\r\n  const countryList = props.countryData;\r\n\r\n  useEffect(() =>{\r\n    if (props.filteredByRegion === true) setCurrentInput(\"\")\r\n  },[props.filteredByRegion])\r\n\r\n  const nameToUppercase = (input) => {\r\n    if (input.length === 0) return;\r\n    const stringArray = input.split(\" \");\r\n\r\n    if (stringArray.length === 1) {\r\n      return input.charAt(0).toUpperCase() + input.slice(1);\r\n    } else {\r\n      const newInput = stringArray.map((word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      });\r\n      return newInput.join(\" \");\r\n    }\r\n  };\r\n\r\n  const listFilter = (input) => {\r\n    const query = nameToUppercase(input);\r\n    const newList = countryList.filter((item) => {\r\n      return query === item.name.slice(0, query.length);\r\n    });\r\n    return newList;\r\n  };\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setCurrentInput(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (currentInput.trim().length === 0) {\r\n      props.onSearch(false);\r\n    } else {\r\n      const newCountryList = listFilter(currentInput);\r\n      props.onSearch(newCountryList);\r\n    }\r\n  };\r\n\r\n  const inputClass = `${classes.inputContainer} ${\r\n    themeCtx.currentTheme === \"dark\"\r\n      ? \" darkElement darkBoxShadow\"\r\n      : \" lightElement lightBoxShadow\"\r\n  }`;\r\n  // useEffect(() => {\r\n  //     const timer = setTimeout(() => {\r\n\r\n  //     }, 3000)\r\n  //     return\r\n  // }, [currentInput]);\r\n\r\n  return (\r\n    <form className={classes.inputForm} onSubmit={formSubmitHandler}>\r\n      <div className={inputClass}>\r\n        <i className=\"fas fa-search customIcon\"></i>\r\n        <input\r\n          type=\"text\"\r\n          onChange={inputChangeHandler}\r\n          placeholder=\"Search for a country...\"\r\n          value={currentInput}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./ListCard.module.css\";\r\nimport ThemeContext from \"../context/theme-context\";\r\n\r\nconst ListCard = (props) => {\r\n  const themeCtx = useContext(ThemeContext);\r\n\r\n  const country = props.country;\r\n\r\n  const listCardClass = `${classes.listCard} ${\r\n    themeCtx.currentTheme === \"dark\"\r\n      ? \" darkElement darkBoxShadow\"\r\n      : \" lightElement lightBoxShadow\"\r\n  }`;\r\n\r\n  const popFormatter = (number) => {\r\n\r\n  }\r\n\r\n  return (\r\n    <Link className={classes.routeLink} to={`/countries/${country.id}`}>\r\n      <div className={listCardClass} data-listcard={'List-Card'}>\r\n        <img className={classes.image} src={country.img} />\r\n        <div className={classes.description}>\r\n          <h2>{country.name}</h2>\r\n          <p>\r\n            <span>Population: </span>\r\n            {country.pop.toLocaleString()}\r\n          </p>\r\n          <p>\r\n            <span>Region: </span>\r\n            {country.region}\r\n          </p>\r\n          <p>\r\n            <span>Captial: </span>\r\n            {country.captial}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n ","const NotFound = () => {\r\n    return <div>Your country could not be found! Please try again</div>\r\n}\r\n\r\nexport default NotFound","import { useCallback, useReducer } from \"react\"\r\n\r\nconst httpReducer = (state, action) => {\r\n    if (action.type === 'SEND') {\r\n        return {\r\n          data: null,\r\n          error: null,\r\n          status: 'pending',\r\n        };\r\n      }\r\n    \r\n      if (action.type === 'SUCCESS') {\r\n        return {\r\n          data: action.responseData,\r\n          error: null,\r\n          status: 'completed',\r\n        };\r\n      }\r\n    \r\n      if (action.type === 'ERROR') {\r\n        return {\r\n          data: null,\r\n          error: action.errorMessage,\r\n          status: 'completed',\r\n        };\r\n      }\r\n\r\n      if (action.type === 'UPDATE') {\r\n        return {\r\n          filteredData: action.newData,\r\n          status: 'filtered'\r\n        };\r\n      }\r\n    \r\n      return state;\r\n}\r\n\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n    const [httpState, dispatch] = useReducer(httpReducer, {\r\n      status: startWithPending ? 'pending' : null,\r\n      data: null,\r\n      error: null,\r\n    });\r\n  \r\n    const sendRequest = useCallback(\r\n      async function (requestData) {\r\n        dispatch({ type: 'SEND' });\r\n        try {\r\n          const responseData = await requestFunction(requestData);\r\n          dispatch({ type: 'SUCCESS', responseData });\r\n\r\n        } catch (error) {\r\n          dispatch({\r\n            type: 'ERROR',\r\n            errorMessage: error.message || 'Something went wrong!',\r\n          });\r\n        }\r\n      },\r\n      [requestFunction]\r\n    );\r\n\r\n    const updateData = (newData) => {\r\n      dispatch({ type: 'UPDATE', newData})\r\n    }\r\n  \r\n    return {\r\n      updateData,\r\n      sendRequest,\r\n      ...httpState,\r\n    };\r\n}\r\n\r\n\r\nexport default useHttp\r\n\r\n\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { fetchAllCountriesHandler } from \"../components/lib/api\";\r\nimport classes from \"./ListCountries.module.css\";\r\n\r\nimport SelectRegion from \"../components/SelectRegion\";\r\nimport Input from \"../components/Input\";\r\nimport ListCard from \"../components/ListCard\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NotFound from \"../components/UI/NotFound\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\n\r\nconst ListCountries = () => {\r\n  const [filteredContent, setFilteredContent] = useState([]);\r\n  const [isFiltered, setIsFiltered] = useState(false)\r\n  const [isFilteredRegion, setIsFilteredRegion] = useState(false)\r\n\r\n  const { data, error, status, sendRequest } = useHttp(\r\n    fetchAllCountriesHandler,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  let content = []\r\n  \r\n  const filterCountryHandler = (countryList, filteredByRegion = false) => {\r\n    if (countryList === false) {\r\n      setIsFiltered(false)\r\n      return\r\n    }\r\n    \r\n    setIsFilteredRegion(filteredByRegion)\r\n    setIsFiltered(true)\r\n    setFilteredContent(countryList)\r\n  };\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && !isFiltered) {\r\n    console.log(data)\r\n    content = data.map((country) => (\r\n      <ListCard key={country.id} country={country} />\r\n    ));\r\n  }\r\n\r\n  if (isFiltered) {\r\n    content = filteredContent.map((country) => (\r\n      <ListCard key={country.id} country={country} />\r\n    ));\r\n  }\r\n\r\n  if (isFiltered && filteredContent.length === 0) {\r\n    content = <NotFound/>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.countries + \" container\"}>\r\n      <div className={classes.countryMenu}>\r\n        <Input onSearch={filterCountryHandler} countryData={data} filteredByRegion={isFilteredRegion}/>\r\n        <SelectRegion onSearch={filterCountryHandler} countryData={data} filteredByRegion={isFilteredRegion}/>\r\n      </div>\r\n      <div className={classes.countryList}>{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCountries;\r\n","import { useContext } from 'react'\r\n\r\nimport classes from './Button.module.css'\r\nimport ThemeContext from '../../context/theme-context'\r\n\r\nconst Button = (props) => {\r\n\r\n    const themeCtx = useContext(ThemeContext)\r\n\r\n    const buttonClass = `${classes.button} ${props.className} ${\r\n        themeCtx.currentTheme === \"dark\"\r\n          ? \" darkElement darkBoxShadow\"\r\n          : \" lightElement lightBoxShadow\"\r\n      }`;\r\n\r\n    // const buttonClass = `${classes.button} ${props.className} element`\r\n   return <button className={buttonClass}>{props.children}</button>\r\n}\r\n\r\n\r\nexport default Button","import { Link } from 'react-router-dom'\r\nimport classes from './DetailCard.module.css'\r\n\r\nimport Button from '../components/UI/Button'\r\n\r\nconst DetailCard = (props) => {\r\n    const country = props.countryData\r\n\r\n    return (\r\n        <div className={classes.cardContainer}>\r\n            {/* <button className={classes.backButton}>Back Button</button> */}\r\n            <div className={classes.detailCard}>\r\n                <img className={classes.image} src={country.flag} alt=\"This is where the image goes!\"/>\r\n                <div className={classes.description}>\r\n                    <h1 className={classes.header}>{country.name}</h1>\r\n                    <div className={classes.column}>\r\n                        <p><span>Native Name: </span>{country.nativeName}</p> \r\n                        <p><span>Population: </span>{country.population.toLocaleString()}</p>\r\n                        <p><span>Region: </span>{country.region}</p>\r\n                        <p><span>Subregion: </span>{country.subregion}</p>\r\n                        <p><span>Captial: </span>{country.capital}</p>\r\n                    </div>\r\n                    <div className={classes.column}>\r\n                        <p><span>Top Level Domain: </span>{country.topLevelDomain[0]}</p>\r\n                        <p><span>Currencies: </span>{country.currencies[0].name}</p>\r\n                        <p><span>Languages: </span>{country.languages[0].name}</p>\r\n                    </div>\r\n                    <div className={classes.border}>\r\n                        Border Countries: {\r\n                            country.borders.map(country => <Link to={`/countries/${country}`}><Button>{country} </Button></Link>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailCard","import { useParams, Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { fetchOneCountryHandler } from \"../components/lib/api\";\r\nimport DetailCard from \"../components/DetailCard\";\r\nimport Button from \"../components/UI/Button\";\r\nimport classes from './CardDetails.module.css'\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst CardDetails = () => {\r\n\r\n  const params = useParams();\r\n  // console.log(params);\r\n\r\n  const {data, status, error, sendRequest} = useHttp(fetchOneCountryHandler)\r\n\r\n  useEffect(() => {\r\n    sendRequest(params.countryID)\r\n  }, [sendRequest, params])\r\n\r\n  // console.log(data)\r\n\r\n  let content\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (status === 'completed') {\r\n    content = <DetailCard countryData={data}/> \r\n  }\r\n  \r\n  return (\r\n    <div className={classes.detailsContainer + ' container'}>\r\n      <Link to='/countries'>\r\n      <Button className={classes.detailsButton}>Back</Button>\r\n      </Link>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import { useContext } from \"react\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Navbar from \"./components/UI/Navbar\";\nimport ListCountries from \"./pages/ListCountries\";\nimport CardDetails from \"./pages/CardDetails\";\nimport { ThemeProvider } from \"./context/theme-context\";\n\n\nfunction App() {\n\n\n  return (\n    <ThemeProvider>\n      <Navbar />\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to=\"countries\" />\n        </Route>\n        <Route path='/countries' exact>\n          <ListCountries />\n        </Route>\n        <Route path='/countries/:countryID'>\n          <CardDetails />\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}